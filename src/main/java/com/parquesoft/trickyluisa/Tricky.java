/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.parquesoft.trickyluisa;

import java.awt.Color;
import javax.swing.JOptionPane;
/**
 *
 * @author Mi PC
 */
public class Tricky extends javax.swing.JFrame {

    
    int turno =2; //lo inicio en 2 para poder hacer la operacion que me permite calcular quien esta jugando
    int jugando [] = {0,0,0,0,0,0,0,0,0}; //para saber que boton use en el juego
    int j1gana [] = {0,0,0,
                     0,0,0,
                     0,0,0};
    int j2gana [] = {0,0,0,
                     0,0,0,
                     0,0,0};
    boolean tableroBloqueado = false;
    String nombrej1 = JOptionPane.showInputDialog("Jugador 1,Escriba su nombre");
    String nombrej2 = JOptionPane.showInputDialog("Jugador 2,Escriba su nombre");
    /*logica de el ganador*/
    
    int j1gana(){
        //defino las posiciones para ganar tricky en filas
        if(j1gana[0]==1 && j1gana[1]==1 && j1gana[2]==1){
        tableroBloqueado= true;
       
        return 1;
    }
       if(j1gana[3]==1 && j1gana[4]==1 && j1gana[5]==1){
        tableroBloqueado= true;
        return 1;
    }
        if(j1gana[6]==1 && j1gana[7]==1 && j1gana[8]==1){
        tableroBloqueado= true;
        return 1;
    }
        //defino las posiciones para ganar tricky en columnas
        
         if(j1gana[0]==1 && j1gana[3]==1 && j1gana[6]==1){
        tableroBloqueado= true;
        return 1;
    }
          if(j1gana[1]==1 && j1gana[4]==1 && j1gana[7]==1){
        tableroBloqueado= true;
        return 1;
        
    }
         if(j1gana[2]==1 && j1gana[5]==1 && j1gana[8]==1){
        tableroBloqueado= true;
        return 1;
    }
          //defino las posiciones para ganar tricky en diagonal
        if(j1gana[2]==1 && j1gana[4]==1 && j1gana[6]==1){
        tableroBloqueado= true;
        return 1;
    }
        if(j1gana[0]==1 && j1gana[4]==1 && j1gana[8]==1){
        tableroBloqueado= true;
        return 1;
    }
        return 0;
    }
    
    // jugador 2
    int j2gana(){
        
    //defino las posiciones para ganar tricky en filas
        if(j2gana[0]==1 && j2gana[1]==1 && j2gana[2]==1){
        tableroBloqueado= true;
        return 1;
    }
       if(j2gana[3]==1 && j2gana[4]==1 && j2gana[5]==1){
        tableroBloqueado= true;
        return 1;
    }
        if(j2gana[6]==1 && j2gana[7]==1 && j2gana[8]==1){
        tableroBloqueado= true;
        return 1;
    }
        //defino las posiciones para ganar tricky en columnas
        
         if(j2gana[0]==1 && j2gana[3]==1 && j2gana[6]==1){
        tableroBloqueado= true;
        return 1;
    }
          if(j2gana[1]==1 && j2gana[4]==1 && j2gana[7]==1){
        tableroBloqueado= true;
        return 1;
        
    }
         if(j2gana[2]==1 && j2gana[5]==1 && j2gana[8]==1){
        tableroBloqueado= true;
        return 1;
    }
          //defino las posiciones para ganar tricky en diagonal
        if(j2gana[2]==1 && j2gana[4]==1 && j2gana[6]==1){
        tableroBloqueado= true;
        return 1;
    }
        if(j2gana[0]==1 && j2gana[4]==1 && j2gana[8]==1){
        tableroBloqueado= true;
        return 1;
    }
        return 0;
    }
        
    
    

    
    
    
    
    
    public Tricky() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        a2 = new javax.swing.JButton();
        a3 = new javax.swing.JButton();
        b3 = new javax.swing.JButton();
        c3 = new javax.swing.JButton();
        c2 = new javax.swing.JButton();
        c1 = new javax.swing.JButton();
        b1 = new javax.swing.JButton();
        a1 = new javax.swing.JButton();
        b2 = new javax.swing.JButton();
        reset = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("TRICKY");
        setBackground(new java.awt.Color(255, 255, 255));

        a2.setBackground(new java.awt.Color(153, 153, 153));
        a2.setFont(new java.awt.Font("Ebrima", 1, 48)); // NOI18N
        a2.setForeground(new java.awt.Color(255, 255, 255));
        a2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                a2ActionPerformed(evt);
            }
        });

        a3.setBackground(new java.awt.Color(153, 153, 153));
        a3.setFont(new java.awt.Font("Ebrima", 1, 48)); // NOI18N
        a3.setForeground(new java.awt.Color(255, 255, 255));
        a3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                a3ActionPerformed(evt);
            }
        });

        b3.setBackground(new java.awt.Color(153, 153, 153));
        b3.setFont(new java.awt.Font("Ebrima", 1, 48)); // NOI18N
        b3.setForeground(new java.awt.Color(255, 255, 255));
        b3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b3ActionPerformed(evt);
            }
        });

        c3.setBackground(new java.awt.Color(153, 153, 153));
        c3.setFont(new java.awt.Font("Ebrima", 1, 48)); // NOI18N
        c3.setForeground(new java.awt.Color(255, 255, 255));
        c3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c3ActionPerformed(evt);
            }
        });

        c2.setBackground(new java.awt.Color(153, 153, 153));
        c2.setFont(new java.awt.Font("Ebrima", 1, 48)); // NOI18N
        c2.setForeground(new java.awt.Color(255, 255, 255));
        c2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c2ActionPerformed(evt);
            }
        });

        c1.setBackground(new java.awt.Color(153, 153, 153));
        c1.setFont(new java.awt.Font("Ebrima", 1, 48)); // NOI18N
        c1.setForeground(new java.awt.Color(255, 255, 255));
        c1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c1ActionPerformed(evt);
            }
        });

        b1.setBackground(new java.awt.Color(153, 153, 153));
        b1.setFont(new java.awt.Font("Ebrima", 1, 48)); // NOI18N
        b1.setForeground(new java.awt.Color(255, 255, 255));
        b1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b1ActionPerformed(evt);
            }
        });

        a1.setBackground(new java.awt.Color(153, 153, 153));
        a1.setFont(new java.awt.Font("Ebrima", 1, 48)); // NOI18N
        a1.setForeground(new java.awt.Color(255, 255, 255));
        a1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                a1ActionPerformed(evt);
            }
        });

        b2.setBackground(new java.awt.Color(153, 153, 153));
        b2.setFont(new java.awt.Font("Ebrima", 1, 48)); // NOI18N
        b2.setForeground(new java.awt.Color(255, 255, 255));
        b2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b2ActionPerformed(evt);
            }
        });

        reset.setText("Jugar Nuevamente");
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(b1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(a1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(b2, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(b3, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(a2, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(a3, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(c1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(c2, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(c3, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(69, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(reset, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(178, 178, 178))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(a3, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(a2, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(a1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(b1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b3, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b2, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(c1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(c2, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(c3, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(reset, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void b2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b2ActionPerformed
       if (jugando[4] == 0 && tableroBloqueado == false){
    /*/OPERACION PARA SABER QUE JUGADOR JUEGA*/ if(turno%2 == 0){
             b2.setText("X");
             jugando[4] = 1;
             turno++;
             j1gana[4]=1;
             /*logica ganador*/
             int resultado1 = j1gana ();
             int resultado2 = j2gana ();
             if (resultado1 == 1){
             
             JOptionPane.showMessageDialog(rootPane,"felicidades "+ nombrej1 +" ganastes!");
             
             }else if (resultado2==1){
             JOptionPane.showMessageDialog(rootPane,"felicidades "+ nombrej2+ " ganastes!");
             
    }
                
              
            
               
            }else{ 
             b2.setText("O");
             jugando[4] = 1;
             turno++;
             j2gana[4]=1;
             /*logica ganador*/
             int resultado1 = j1gana ();
             int resultado2 = j2gana ();
             if (resultado1 == 1){
             
             JOptionPane.showMessageDialog(rootPane,"felicidades"+nombrej1+"ganastes!");
             
             }else if (resultado2==1){
             JOptionPane.showMessageDialog(rootPane,"felicidades"+nombrej2+"ganastes!");
             
             }
             
            }           
                        
    }else{
            if(tableroBloqueado){
            JOptionPane.showMessageDialog(rootPane, "el juego termino, inicia nuevamente");
            }else{
                
             JOptionPane.showMessageDialog(rootPane, "esta casilla ya esta ocupáda");
        
        }
            }
    }//GEN-LAST:event_b2ActionPerformed

    private void b3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b3ActionPerformed
        if (jugando[5] == 0 && tableroBloqueado == false){
    /*/OPERACION PARA SABER QUE JUGADOR JUEGA*/ if(turno%2 == 0){
             b3.setText("X");
             jugando[5] = 1;
             turno++;
             j1gana[5]=1;
             /*logica ganador*/
             int resultado1 = j1gana ();
             int resultado2 = j2gana ();
             if (resultado1 == 1){
             
             JOptionPane.showMessageDialog(rootPane,"felicidades"+nombrej1+"ganastes!");
             
             }else if (resultado2==1){
             JOptionPane.showMessageDialog(rootPane,"felicidades"+nombrej2+"ganastes!");
             
    }
                
              
            
               
            }else{ 
             b3.setText("O");
             jugando[5] = 1;
             turno++;
             j2gana[5]=1;
             /*logica ganador*/
             int resultado1 = j1gana ();
             int resultado2 = j2gana ();
             if (resultado1 == 1){
             
             JOptionPane.showMessageDialog(rootPane,"felicidades"+nombrej1+"ganastes!");
             
             }else if (resultado2==1){
             JOptionPane.showMessageDialog(rootPane,"felicidades"+nombrej2+"ganastes!");
             
             }
             
            }           
                        
    }else{
            if(tableroBloqueado){
            JOptionPane.showMessageDialog(rootPane, "el juego termino, inicia nuevamente");
            }else{
                
             JOptionPane.showMessageDialog(rootPane, "esta casilla ya esta ocupáda");
        
        }
            }
    }//GEN-LAST:event_b3ActionPerformed

    private void a1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_a1ActionPerformed
        // TODO add your handling code here:
         if (jugando[0] == 0 && tableroBloqueado == false){
    /*/OPERACION PARA SABER QUE JUGADOR JUEGA*/ if(turno%2 == 0){
             a1.setText("x");
             jugando[0] = 1;
             turno++;
             j1gana[0]=1;
             /*logica ganador*/
             int resultado1 = j1gana ();
             int resultado2 = j2gana ();
             if (resultado1 == 1){
             
             JOptionPane.showMessageDialog(rootPane,"felicidades"+nombrej1+"ganastes!");
             
             }else if (resultado2==1){
             JOptionPane.showMessageDialog(rootPane,"felicidades"+nombrej2+"ganastes!");
             
    }
                
              
            
               
            }else{ 
             a1.setText("O");
             jugando[0] = 1;
             turno++;
             j2gana[0]=1;
             /*logica ganador*/
             int resultado1 = j1gana ();
             int resultado2 = j2gana ();
             if (resultado1 == 1){
             
             JOptionPane.showMessageDialog(rootPane,"felicidades"+nombrej1+"ganastes!");
             
             }else if (resultado2==1){
             JOptionPane.showMessageDialog(rootPane,"felicidades"+nombrej2+"ganastes!");
             
             }
             
            }           
                        
    }else{
            if(tableroBloqueado){
            JOptionPane.showMessageDialog(rootPane, "el juego termino, inicia nuevamente");
            }else{
                
             JOptionPane.showMessageDialog(rootPane, "esta casilla ya esta ocupáda");
        
        }
            }
    }//GEN-LAST:event_a1ActionPerformed

    private void a2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_a2ActionPerformed
        // TODO add your handling code here:
           if (jugando[1] == 0 && tableroBloqueado == false){
    /*/OPERACION PARA SABER QUE JUGADOR JUEGA*/ if(turno%2 == 0){
             a2.setText("x");
             jugando[1] = 1;
             turno++;
             j1gana[1]=1;
             /*logica ganador*/
             int resultado1 = j1gana ();
             int resultado2 = j2gana ();
             if (resultado1 == 1){
             
             JOptionPane.showMessageDialog(rootPane,"felicidades"+nombrej1+"ganastes!");
             
             }else if (resultado2==1){
             JOptionPane.showMessageDialog(rootPane,"felicidades"+nombrej2+"ganastes!");
             
    }
                
              
            
               
            }else{ 
             a2.setText("O");
             jugando[1] = 1;
             turno++;
             j2gana[1]=1;
             /*logica ganador*/
             int resultado1 = j1gana ();
             int resultado2 = j2gana ();
             if (resultado1 == 1){
             
             JOptionPane.showMessageDialog(rootPane,"felicidades"+nombrej1+"ganastes!");
             
             }else if (resultado2==1){
             JOptionPane.showMessageDialog(rootPane,"felicidades"+nombrej2+"ganastes!");
             
             }
             
            }           
                        
    }else{
            if(tableroBloqueado){
            JOptionPane.showMessageDialog(rootPane, "el juego termino, inicia nuevamente");
            }else{
                
             JOptionPane.showMessageDialog(rootPane, "esta casilla ya esta ocupáda");
        
        }
            }
    }//GEN-LAST:event_a2ActionPerformed

    private void a3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_a3ActionPerformed
        // TODO add your handling code here:
        
        if (jugando[2] == 0 && tableroBloqueado == false){
    /*/OPERACION PARA SABER QUE JUGADOR JUEGA*/ if(turno%2 == 0){
             a3.setText("x");
             jugando[2] = 1;
             turno++;
             j1gana[2]=1;
             /*logica ganador*/
             int resultado1 = j1gana ();
             int resultado2 = j2gana ();
             if (resultado1 == 1){
             
             JOptionPane.showMessageDialog(rootPane,"felicidades"+nombrej1+"ganastes!");
             
             }else if (resultado2==1){
             JOptionPane.showMessageDialog(rootPane,"felicidades"+nombrej2+"ganastes!");
             
    }
                
              
            
               
            }else{ 
             a3.setText("O");
             jugando[2] = 1;
             turno++;
             j2gana[2]=1;
             /*logica ganador*/
             int resultado1 = j1gana ();
             int resultado2 = j2gana ();
             if (resultado1 == 1){
             
             JOptionPane.showMessageDialog(rootPane,"felicidades"+nombrej1+"ganastes!");
             
             }else if (resultado2==1){
             JOptionPane.showMessageDialog(rootPane,"felicidades"+nombrej2+"ganastes!");
             
             }
             
            }           
                        
    }else{
            if(tableroBloqueado){
            JOptionPane.showMessageDialog(rootPane, "el juego termino, inicia nuevamente");
            }else{
                
             JOptionPane.showMessageDialog(rootPane, "esta casilla ya esta ocupáda");
        
        }
            }
    
    }//GEN-LAST:event_a3ActionPerformed

    private void b1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b1ActionPerformed
        // TODO add your handling code here:
        
        
            if (jugando[3] == 0 && tableroBloqueado == false){
    /*/OPERACION PARA SABER QUE JUGADOR JUEGA*/ if(turno%2 == 0){
             b1.setText("x");
             jugando[3] = 1;
             turno++;
             j1gana[3]=1;
             /*logica ganador*/
             int resultado1 = j1gana ();
             int resultado2 = j2gana ();
             if (resultado1 == 1){
             
             JOptionPane.showMessageDialog(rootPane,"felicidades"+nombrej1+"ganastes!");
             
             }else if (resultado2==1){
             JOptionPane.showMessageDialog(rootPane,"felicidades"+nombrej2+"ganastes!");
             
    }
                
              
            
               
            }else{ 
             b1.setText("O");
             jugando[3] = 1;
             turno++;
             j2gana[3]=1;
             /*logica ganador*/
             int resultado1 = j1gana ();
             int resultado2 = j2gana ();
             if (resultado1 == 1){
             
             JOptionPane.showMessageDialog(rootPane,"felicidades"+nombrej1+"ganastes!");
             
             }else if (resultado2==1){
             JOptionPane.showMessageDialog(rootPane,"felicidades"+nombrej2+"ganastes!");
             
             }
             
            }           
                        
    }else{
            if(tableroBloqueado){
            JOptionPane.showMessageDialog(rootPane, "el juego termino, inicia nuevamente");
            }else{
                
             JOptionPane.showMessageDialog(rootPane, "esta casilla ya esta ocupáda");
        
        }
            }
    }//GEN-LAST:event_b1ActionPerformed

    private void c1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c1ActionPerformed
        // TODO add your handling code here:
        
            if (jugando[6] == 0 && tableroBloqueado == false){
    /*/OPERACION PARA SABER QUE JUGADOR JUEGA*/ if(turno%2 == 0){
             c1.setText("x");
             jugando[6] = 1;
             turno++;
             j1gana[6]=1;
             /*logica ganador*/
             int resultado1 = j1gana ();
             int resultado2 = j2gana ();
             if (resultado1 == 1){
             
             JOptionPane.showMessageDialog(rootPane,"felicidades"+nombrej1+"ganastes!");
             
             }else if (resultado2==1){
             JOptionPane.showMessageDialog(rootPane,"felicidades"+nombrej2+"ganastes!");
             
    }
                
              
            
               
            }else{ 
             c1.setText("O");
             jugando[6] = 1;
             turno++;
             j2gana[6]=1;
             /*logica ganador*/
             int resultado1 = j1gana ();
             int resultado2 = j2gana ();
             if (resultado1 == 1){
             
             JOptionPane.showMessageDialog(rootPane,"felicidades"+nombrej1+"ganastes!");
             
             }else if (resultado2==1){
             JOptionPane.showMessageDialog(rootPane,"felicidades"+nombrej2+"ganastes!");
             
             }
             
            }           
                        
    }else{
            if(tableroBloqueado){
            JOptionPane.showMessageDialog(rootPane, "el juego termino, inicia nuevamente");
            }else{
                
             JOptionPane.showMessageDialog(rootPane, "esta casilla ya esta ocupáda");
        
        }
            }
    }//GEN-LAST:event_c1ActionPerformed

    private void c2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c2ActionPerformed
        // TODO add your handling code here:
        
        
            if (jugando[7] == 0 && tableroBloqueado == false){
    /*/OPERACION PARA SABER QUE JUGADOR JUEGA*/ if(turno%2 == 0){
             c2.setText("x");
             jugando[7] = 1;
             turno++;
             j1gana[7]=1;
             /*logica ganador*/
             int resultado1 = j1gana ();
             int resultado2 = j2gana ();
             if (resultado1 == 1){
             
             JOptionPane.showMessageDialog(rootPane,"felicidades"+nombrej1+"ganastes!");
             
             }else if (resultado2==1){
             JOptionPane.showMessageDialog(rootPane,"felicidades"+nombrej2+"ganastes!");
             
    }
                
              
            
               
            }else{ 
             c2.setText("O");
             jugando[7] = 1;
             turno++;
             j2gana[7]=1;
             /*logica ganador*/
             int resultado1 = j1gana ();
             int resultado2 = j2gana ();
             if (resultado1 == 1){
             
             JOptionPane.showMessageDialog(rootPane,"felicidades"+nombrej1+"ganastes!");
             
             }else if (resultado2==1){
             JOptionPane.showMessageDialog(rootPane,"felicidades"+nombrej2+"ganastes!");
             
             }
             
            }           
                        
    }else{
            if(tableroBloqueado){
            JOptionPane.showMessageDialog(rootPane, "el juego termino, inicia nuevamente");
            }else{
                
             JOptionPane.showMessageDialog(rootPane, "esta casilla ya esta ocupáda");
        
        }
            }
    }//GEN-LAST:event_c2ActionPerformed

    private void c3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c3ActionPerformed
        // TODO add your handling code here:
        
            if (jugando[8] == 0 && tableroBloqueado == false){
    /*/OPERACION PARA SABER QUE JUGADOR JUEGA*/ if(turno%2 == 0){
             c3.setText("x");
             jugando[8] = 1;
             turno++;
             j1gana[8]=1;
             /*logica ganador*/
             int resultado1 = j1gana ();
             int resultado2 = j2gana ();
             if (resultado1 == 1){
             
             JOptionPane.showMessageDialog(rootPane,"felicidades"+nombrej1+"ganastes!");
             
             }else if (resultado2==1){
             JOptionPane.showMessageDialog(rootPane,"felicidades"+nombrej2+"ganastes!");
             
    }
                
              
            
               
            }else{ 
             c3.setText("O");
             jugando[8] = 1;
             turno++;
             j2gana[8]=1;
             /*logica ganador*/
             int resultado1 = j1gana ();
             int resultado2 = j2gana ();
             if (resultado1 == 1){
             
             JOptionPane.showMessageDialog(rootPane,"felicidades"+nombrej1+"ganastes!");
             
             }else if (resultado2==1){
             JOptionPane.showMessageDialog(rootPane,"felicidades"+nombrej2+"ganastes!");
             
             }
             
            }           
                        
    }else{
            if(tableroBloqueado){
            JOptionPane.showMessageDialog(rootPane, "el juego termino, inicia nuevamente");
            }else{
                
             JOptionPane.showMessageDialog(rootPane, "esta casilla ya esta ocupáda");
        
        }
            }
    
    }//GEN-LAST:event_c3ActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        // TODO add your handling code here:
         
           tableroBloqueado= false;//desbloqueo tablero y limpío
           a1.setText("");
           a2.setText("");
           a3.setText("");
           b1.setText("");
           b2.setText("");
           b3.setText("");
           c1.setText("");
           c2.setText("");
           c3.setText("");
           
           
           turno = 2;
           
           for(int i = 0; i <9; i++){
             jugando[i]=0;
             j1gana[i]=0;
             j2gana[i]=0;
        
           
           }

    }//GEN-LAST:event_resetActionPerformed
     
               
   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tricky.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tricky.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tricky.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tricky.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tricky().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton a1;
    private javax.swing.JButton a2;
    private javax.swing.JButton a3;
    private javax.swing.JButton b1;
    private javax.swing.JButton b2;
    private javax.swing.JButton b3;
    private javax.swing.JButton c1;
    private javax.swing.JButton c2;
    private javax.swing.JButton c3;
    private javax.swing.JButton reset;
    // End of variables declaration//GEN-END:variables
}
